name: Prepare FABulous workflow
description: Composite action to prepare a container with everything needed to run FABulous

inputs:
  python_version:
    description: "Python version to use"
    required: false
    default: "3.12"
  oss-cad-suite-nightly:
    description: "Set true to use nightly version of oss-cad-suite."
    required: false
    default: "false"
  additional_system_packages:
    description: "Additional ubuntu packages to install"
    required: false
    default: ""
  additional_python_packages:
    description: "Additional python packages to install"
    required: false
    default: ""
  install_ghdl_mcode:
    description: "If false, ghdl mcode won't be installed and the oss-cad-suite llvm version is used"
    required: false
    default: "true"


runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}
        cache: "pip"
        cache-dependency-path: |
          requirements.txt
          pyproject.toml
    - name: Get OSS CAD Suite version
      id: oss-cad-version
      shell: bash
      run: |
        # Get the latest release info from YosysHQ/oss-cad-suite-build
        # Use authenticated API call to avoid rate limits

        if ${{ inputs.oss-cad-suite-nightly }}; then
          echo "Get latest oss-cad-suite nightly version"
          if [ -n "${{ github.token }}"]; then
            VERSION=$(curl -s -H "Authorization: Bearer ${{ github.token }}" \
              "https://api.github.com/repos/YosysHQ/oss-cad-suite-build/releases/latest" | \
              jq -r '.tag_name // "unknown"')
          else
            VERSION=$(curl -s "https://api.github.com/repos/YosysHQ/oss-cad-suite-build/releases/latest" | \
              jq -r '.tag_name // "unknown"')
          fi

          # Fallback to a fixed version if API call fails
          if [ "$VERSION" = "unknown" ] || [ "$VERSION" = "null" ] || [ -z "$VERSION" ]; then
            echo "Warning: Failed to get OSS CAD Suite version from API, using fallback"
            VERSION="2025-07-01"  # Use a recent stable version as fallback
          fi

        else
          echo "Get latest known working OSS CAD Suite version."
          VERSION="2025-07-01"  # Use a recent stable version as fallback
        fi

        echo "Using OSS CAD Suite version: $VERSION"
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    - name: Cache OSS CAD Suite
      id: cache-oss-cad
      uses: actions/cache@v4
      with:
        path: |
          ${{ runner.temp }}/oss-cad-suite
        key: oss-cad-suite-${{ runner.os }}-${{ steps.oss-cad-version.outputs.version }}
        restore-keys: |
          oss-cad-suite-${{ runner.os }}-${{ steps.oss-cad-version.outputs.version }}
    - name: set up OSS CAD path
      if: ${{ steps.cache-oss-cad.outputs.cache-hit == 'true' }}
      shell: bash
      run: |
        echo "${{ runner.temp }}/oss-cad-suite/bin:$PATH" >> "$GITHUB_PATH"
    - name: Set up OSS CAD suite
      if: ${{ steps.cache-oss-cad.outputs.cache-hit != 'true' }}
      uses: YosysHQ/setup-oss-cad-suite@v3
      with:
        github-token: ${{ github.token }}
        version: ${{ steps.oss-cad-version.outputs.version }}
    - name: Install GHDL mcode nightly
      # GHDL mcode is required to test our fabric.
      # The oss-cad-suite action installs GHDL, but with the LLVM backend, which is much slower for our simulation
      uses: ghdl/setup-ghdl@v1
      if: ${{ inputs.install_ghdl_mcode != 'false' }}
      with:
        version: nightly
        backend: mcode
        investigate: true
    - name: Install additional ubuntu packages
      if: ${{ inputs.additional_system_packages != '' }}
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ inputs.additional_system_packages }}
    - name: Upgrade pip
      shell: bash
      run: |
        python3 -m pip install --upgrade pip
    - name: Install additional python packages
      if: ${{ inputs.additional_python_packages != '' }}
      shell: bash
      run: |
        pip3 install ${{ inputs.additional_python_packages }}
    - name: Install FABulous requirements.txt
      shell: bash
      run: |
        if [ -f requirements.txt ]; then pip3 install -r requirements.txt; fi
    - name: Install FABulous requirements
      shell: bash
      run: |
        pip3 install -e .
    - name: Set PATH
      shell: bash
      run: |
        echo "/home/runner/work/FABulous/FABulous/install/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:$PATH" >> "$GITHUB_PATH"
