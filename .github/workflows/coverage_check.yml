name: Coverage check and upload

on:
  workflow_run:
    workflows: ["Testing with pytest and cocotb"]
    types:
      - completed

jobs:
  coverage_check:
    name: Combine, publish, and check coverage
    permissions:
      id-token: write
      contents: read
    if: >-
      ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failure' }}
    runs-on: ubuntu-latest
    env:
      COVERAGE_FAIL_UNDER: '70'
    steps:
      - uses: actions/checkout@v5
      - name: Derive artifact pattern for this attempt
        id: attempt
        shell: bash
        run: |
          # When triggered via workflow_run, attempt number isn't directly exposed. Fallback to 1.
          # If you need exact attempt matching, keep artifacts unique per run-id and pattern match below.
          echo "pattern=coverage-after-partial-*" >> "$GITHUB_OUTPUT"

      - name: Download all partial coverage artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ steps.attempt.outputs.pattern }}
          merge-multiple: false
          run-id: ${{ github.event.workflow_run.id }}

      - name: Set up Python for coverage
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install coverage tool
        run: |
          python -m pip install --upgrade pip
          pip install coverage

      - name: Combine coverage and generate reports
        shell: bash
        run: |
          echo "Found coverage artifacts:"
          set -e
          files=$(find . -type f -path "./coverage-after-partial-*/.coverage*" -print | sort || true)
          echo "$files"
          if [ -z "$files" ]; then
            echo "No coverage files found. Skipping report generation."
            exit 0
          fi
          # Combine .coverage files from all downloaded artifact directories
          coverage combine $(find . -type f -path "./coverage-after-partial-*/.coverage*" -printf '%h\n' | sort -u)
          coverage report -m | tee coverage_summary.txt
          echo "\n\nCombined coverage summary" >> "$GITHUB_STEP_SUMMARY"
          echo "\n" >> "$GITHUB_STEP_SUMMARY"
          sed 's/^/    /' coverage_summary.txt >> "$GITHUB_STEP_SUMMARY"
          coverage xml -o coverage.xml
          coverage html -d coverage_html

      - name: Upload combined coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: error

      - name: Upload combined coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage_html
          if-no-files-found: error

      - name: Upload coverage to Codecov (OIDC)
        if: ${{ hashFiles('coverage.xml') != '' }}
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          flags: python,pytest
          name: coverage-merge
          fail_ci_if_error: false
          use_oidc: true

      - name: Enforce coverage threshold
        if: ${{ hashFiles('coverage.xml') != '' }}
        shell: bash
        run: |
          echo "Enforcing coverage threshold: ${COVERAGE_FAIL_UNDER}%"
          coverage report --fail-under=${COVERAGE_FAIL_UNDER}
